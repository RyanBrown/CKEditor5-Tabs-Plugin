// src/plugins/alight-population-plugin/styles/alight-population-plugin.scss
@use './../../../styles/mixins' as mixins;

.cka-population-content {
  flex: 1;
  overflow-y: auto;
  padding: 0;
  position: relative;
}

// Style for population tags in the editor
.ck-content {

  // Base styles for all population tags
  .cka-population-tag {
    background-color: #e4f4ee;
    border-radius: .188rem; // 3px
    color: var(--success);
    cursor: pointer;
    display: inline-block;
    font-family: monospace;
    font-size: 0.85em;
    font-style: normal;
    font-weight: var(--font-weight-bold);
    margin: .125rem; // 2px
    padding: .125rem .375rem; // 2px 6px
    user-select: none;
    white-space: nowrap;

    // Apply transition for hover effect
    transition: background-color 0.2s ease;

    &:hover {
      background-color: var(--success);
      color: var(--neutral-white);
    }

    // Specific styles for begin and end tags
    &.cka-population-begin {
      margin-right: 3px;
      user-select: none;
    }

    &.cka-population-end {
      margin-left: 3px;
      user-select: none;
    }

    // IMPORTANT: Override any CKEditor widget styling
    &.ck-widget,
    &.ck-widget_selected,
    &.ck-widget_with-selection-handle {
      outline: none !important;
      border: none !important;
      box-shadow: none !important;
      background-color: inherit !important;
    }

    // Ensure widget selection handles are not shown
    &>.ck-widget__selection-handle {
      display: none !important;
    }

    // Make sure population tags never have contenteditable="false"
    &[contenteditable="false"] {
      cursor: pointer;
      user-select: none;
    }
  }

  // Ensure ah:expr is properly styled as an editable container
  ah\:expr {
    // Basic container styling
    display: inline-block;
    position: relative;

    // Allow text selection inside
    cursor: text;

    // Make sure text content is properly editable
    &>*:not(.cka-population-tag) {
      cursor: text;
      user-select: text;
    }

    // Remove default CKEditor widget outline only on focused state
    &.ck-widget.ck-widget_selected {
      // Keep a subtle styling to indicate it's selected but not obtrusive
      outline: 1px dashed var(--ck-color-widget-border-subtle, #ddd) !important;
    }
  }

  // Handle specific cases for block elements
  table,
  figure,
  .image {

    // Tags before block elements should be on their own line
    .cka-population-tag.cka-population-begin+&,
    &+.cka-population-tag.cka-population-end {
      display: block;
      margin-top: 5px;
    }
  }
}

// Fix selection issues in paragraph contexts
.ck-content p,
.ck-content h1,
.ck-content h2,
.ck-content h3,
.ck-content h4,
.ck-content h5,
.ck-content h6,
.ck-content li {
  .cka-population-tag {
    line-height: 1;
    vertical-align: baseline;
  }
}

// Modal styles for external content
.cka-dialog {
  .cka-population-list {
    border-radius: 4px;
    border: 1px solid #ccc;
    margin: 10px 0;
    max-height: 300px;
    overflow-y: auto;

    .cka-population-item {
      border-bottom: 1px solid #eee;
      cursor: pointer;
      padding: 8px 12px;

      &:last-child {
        border-bottom: none;
      }

      &:hover {
        background-color: #f5f5f5;
      }

      &.selected {
        background-color: #e3f2fd;
        font-weight: bold;
      }
    }
  }
}

// Add styles for error alerts in modal
.cka-alert {
  margin: 10px;
  padding: 10px;
  border-radius: 4px;

  &.cka-alert-error {
    background-color: #ffebee;
    border: 1px solid #ffcdd2;

    .cka-alert-warning {
      color: #c62828;
      font-weight: bold;
    }
  }
}

// Loading indicator styles
.cka-loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;

  .cka-loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid var(--success);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }
}

// Center modal message
.cka-center-modal-message {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  text-align: center;
  padding: 20px;
}

// // Confirm dialog content
// .cka-confirm-content {
//   padding: 20px;
//   line-height: 1.5;

//   p {
//     margin-bottom: 10px;
//   }
// }

// // Notification styles
// .cka-notification {
//   position: fixed;
//   top: 20px;
//   right: 20px;
//   z-index: 10000;
//   width: 300px;
//   padding: 15px;
//   border-radius: 4px;
//   box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
//   animation: slide-in 0.3s ease-out;

//   .cka-notification-content {
//     display: flex;
//     justify-content: space-between;
//     align-items: flex-start;
//   }

//   .cka-notification-message {
//     flex: 1;
//     padding-right: 10px;
//   }

//   .cka-notification-close {
//     background: none;
//     border: none;
//     font-size: 18px;
//     cursor: pointer;
//     color: rgba(0, 0, 0, 0.5);

//     &:hover {
//       color: rgba(0, 0, 0, 0.8);
//     }
//   }

//   // Different types of notifications
//   &.cka-notification-success {
//     background-color: #e8f5e9;
//     border-left: 4px solid #4caf50;
//   }

//   &.cka-notification-info {
//     background-color: #e3f2fd;
//     border-left: 4px solid #2196f3;
//   }

//   &.cka-notification-warning {
//     background-color: #fff3e0;
//     border-left: 4px solid #ff9800;
//   }

//   &.cka-notification-error {
//     background-color: #ffebee;
//     border-left: 4px solid #f44336;
//   }
// }

// @keyframes slide-in {
//   from {
//     transform: translateX(100%);
//     opacity: 0;
//   }

//   to {
//     transform: translateX(0);
//     opacity: 1;
//   }
// }

// // Legacy population format styles to ensure they're visible during editing
// // before conversion
// .ck-content {

//   // Style for legacy population markers with green color
//   p[id="populationStart"] {
//     position: relative;
//     border: 1px dashed #4caf50;
//     padding: 8px;
//     margin: 8px 0;

//     // Add a hint to convert
//     &::before {
//       content: "Legacy Population";
//       position: absolute;
//       top: -12px;
//       left: 10px;
//       background-color: #e8f5e9;
//       padding: 2px 6px;
//       font-size: 10px;
//       color: #4caf50;
//       border-radius: 2px;
//     }
//   }

//   // Style for old population begin/end tags
//   span.hide-in-awl.p-hidden {
//     background-color: rgba(76, 175, 80, 0.1);
//     border: 1px solid rgba(76, 175, 80, 0.3);
//     border-radius: 2px;
//     padding: 1px 3px;
//     margin: 0 2px;
//     font-family: monospace;
//     font-size: 0.8em;
//   }
// }

// // Highlight legacy formats to make them more visible before conversion
// span[style="color:green;"] {
//   display: inline-block;
//   background-color: rgba(76, 175, 80, 0.05);
// }
