// src/plugins/alight-population-plugin/styles/alight-population-plugin.scss
@use './../../../styles/mixins' as mixins;

.cka-population-content {
  flex: 1;
  overflow-y: auto;
  padding: 0;
  position: relative;
}

// Style for population tags in the editor
.ck-content {

  // Base styles for all population tags
  .cka-population-tag {
    background-color: #e4f4ee;
    border-radius: .188rem; // 3px
    color: var(--success);
    cursor: pointer;
    display: inline-block;
    font-family: monospace;
    font-size: 0.85em;
    font-style: normal;
    font-weight: var(--font-weight-bold);
    margin: .125rem; // 2px
    padding: .125rem .375rem; // 2px 6px
    user-select: none;
    white-space: nowrap;

    // Apply transition for hover effect
    transition: background-color 0.2s ease;

    &:hover {
      background-color: var(--success);
      color: #fff;
    }

    // Specific styles for begin and end tags
    &.cka-population-begin {
      margin-right: 3px;
    }

    &.cka-population-end {
      margin-left: 3px;
    }

    // IMPORTANT: Override any CKEditor widget styling
    &.ck-widget,
    &.ck-widget_selected,
    &.ck-widget_with-selection-handle {
      outline: none !important;
      border: none !important;
      box-shadow: none !important;
      background-color: inherit !important;
    }

    // Ensure widget selection handles are not shown
    &>.ck-widget__selection-handle {
      display: none !important;
    }

    // Make sure population tags never have contenteditable="false"
    &[contenteditable="false"] {
      cursor: pointer;
      user-select: none;
    }
  }

  // Ensure ah:expr is properly styled as an editable container
  ah\:expr {
    // Basic container styling
    display: inline-block;
    position: relative;

    // Allow text selection inside
    cursor: text;

    // Make sure text content is properly editable
    &>*:not(.cka-population-tag) {
      cursor: text;
      user-select: text;
    }

    // Remove default CKEditor widget outline only on focused state
    &.ck-widget.ck-widget_selected {
      // Keep a subtle styling to indicate it's selected but not obtrusive
      outline: 1px dashed var(--ck-color-widget-border-subtle, #ddd) !important;
    }
  }

  // Handle specific cases for block elements
  table,
  figure,
  .image {

    // Tags before block elements should be on their own line
    .cka-population-tag.cka-population-begin+&,
    &+.cka-population-tag.cka-population-end {
      display: block;
      margin-top: 5px;
    }
  }
}

// Fix selection issues in paragraph contexts
.ck-content p,
.ck-content h1,
.ck-content h2,
.ck-content h3,
.ck-content h4,
.ck-content h5,
.ck-content h6,
.ck-content li {
  .cka-population-tag {
    line-height: 1;
    vertical-align: baseline;
  }
}

// Modal styles for external content
.cka-dialog {
  .cka-population-list {
    border-radius: 4px;
    border: 1px solid #ccc;
    margin: 10px 0;
    max-height: 300px;
    overflow-y: auto;

    .cka-population-item {
      border-bottom: 1px solid #eee;
      cursor: pointer;
      padding: 8px 12px;

      &:last-child {
        border-bottom: none;
      }

      &:hover {
        background-color: #f5f5f5;
      }

      &.selected {
        background-color: #e3f2fd;
        font-weight: bold;
      }
    }
  }
}

// Add styles for error alerts in modal
.cka-alert {
  margin: 10px;
  padding: 10px;
  border-radius: 4px;

  &.cka-alert-error {
    background-color: #ffebee;
    border: 1px solid #ffcdd2;

    .cka-alert-warning {
      color: #c62828;
      font-weight: bold;
    }
  }
}

// Loading indicator styles
.cka-loading-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;

  .cka-loading-spinner {
    width: 40px;
    height: 40px;
    border: 4px solid #f3f3f3;
    border-top: 4px solid var(--success);
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }
}

// Center modal message
.cka-center-modal-message {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 200px;
  text-align: center;
  padding: 20px;
}
